{"ast":null,"code":"// import _ from 'lodash'\n// import faker from 'faker'\n// import React from 'react'\n// import { Search, Grid, Header, Segment } from 'semantic-ui-react'\n// const source = _.times(5, () => ({\n//   title: faker.company.companyName(),\n//   description: faker.company.catchPhrase(),\n//   image: faker.internet.avatar(),\n//   price: faker.finance.amount(0, 100, 2, '$'),\n// }))\n// const initialState = {\n//   loading: false,\n//   results: [],\n//   value: '',\n// }\n// function exampleReducer(state, action) {\n//   switch (action.type) {\n//     case 'CLEAN_QUERY':\n//       return initialState\n//     case 'START_SEARCH':\n//       return { ...state, loading: true, value: action.query }\n//     case 'FINISH_SEARCH':\n//       return { ...state, loading: false, results: action.results }\n//     case 'UPDATE_SELECTION':\n//       return { ...state, value: action.selection }\n//     default:\n//       throw new Error()\n//   }\n// }\n// function SearchComponent() {\n//   const [state, dispatch] = React.useReducer(exampleReducer, initialState)\n//   const { loading, results, value } = state\n//   const timeoutRef = React.useRef()\n//   const handleSearchChange = React.useCallback((e, data) => {\n//     clearTimeout(timeoutRef.current)\n//     dispatch({ type: 'START_SEARCH', query: data.value })\n//     timeoutRef.current = setTimeout(() => {\n//       if (data.value.length === 0) {\n//         dispatch({ type: 'CLEAN_QUERY' })\n//         return\n//       }\n//       const re = new RegExp(_.escapeRegExp(data.value), 'i')\n//       const isMatch = (result) => re.test(result.title)\n//       dispatch({\n//         type: 'FINISH_SEARCH',\n//         results: _.filter(source, isMatch),\n//       })\n//     }, 300)\n//   }, [])\n//   React.useEffect(() => {\n//     return () => {\n//       clearTimeout(timeoutRef.current)\n//     }\n//   }, [])\n//   return (\n//     // <Grid>\n//     //   <Grid.Column width={16}>\n//         <Search\n//           loading={loading}\n//           style={{width: 600}}\n//           onResultSelect={(e, data) =>\n//             dispatch({ type: 'UPDATE_SELECTION', selection: data.result.title })\n//           }\n//           onSearchChange={handleSearchChange}\n//           results={results}\n//           value={value}\n//         />\n//   )\n// }\n// export default SearchComponent\n// /*\n// */","map":{"version":3,"sources":["C:/Users/USER/Desktop/Work/virtualhost/src/components/TestPage.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAMA","sourcesContent":["// import _ from 'lodash'\r\n// import faker from 'faker'\r\n// import React from 'react'\r\n// import { Search, Grid, Header, Segment } from 'semantic-ui-react'\r\n\r\n// const source = _.times(5, () => ({\r\n//   title: faker.company.companyName(),\r\n//   description: faker.company.catchPhrase(),\r\n//   image: faker.internet.avatar(),\r\n//   price: faker.finance.amount(0, 100, 2, '$'),\r\n// }))\r\n\r\n// const initialState = {\r\n//   loading: false,\r\n//   results: [],\r\n//   value: '',\r\n// }\r\n\r\n// function exampleReducer(state, action) {\r\n//   switch (action.type) {\r\n//     case 'CLEAN_QUERY':\r\n//       return initialState\r\n//     case 'START_SEARCH':\r\n//       return { ...state, loading: true, value: action.query }\r\n//     case 'FINISH_SEARCH':\r\n//       return { ...state, loading: false, results: action.results }\r\n//     case 'UPDATE_SELECTION':\r\n//       return { ...state, value: action.selection }\r\n\r\n//     default:\r\n//       throw new Error()\r\n//   }\r\n// }\r\n\r\n// function SearchComponent() {\r\n//   const [state, dispatch] = React.useReducer(exampleReducer, initialState)\r\n//   const { loading, results, value } = state\r\n\r\n//   const timeoutRef = React.useRef()\r\n//   const handleSearchChange = React.useCallback((e, data) => {\r\n//     clearTimeout(timeoutRef.current)\r\n//     dispatch({ type: 'START_SEARCH', query: data.value })\r\n\r\n//     timeoutRef.current = setTimeout(() => {\r\n//       if (data.value.length === 0) {\r\n//         dispatch({ type: 'CLEAN_QUERY' })\r\n//         return\r\n//       }\r\n\r\n//       const re = new RegExp(_.escapeRegExp(data.value), 'i')\r\n//       const isMatch = (result) => re.test(result.title)\r\n\r\n//       dispatch({\r\n//         type: 'FINISH_SEARCH',\r\n//         results: _.filter(source, isMatch),\r\n//       })\r\n//     }, 300)\r\n//   }, [])\r\n//   React.useEffect(() => {\r\n//     return () => {\r\n//       clearTimeout(timeoutRef.current)\r\n//     }\r\n//   }, [])\r\n\r\n//   return (\r\n//     // <Grid>\r\n//     //   <Grid.Column width={16}>\r\n//         <Search\r\n//           loading={loading}\r\n//           style={{width: 600}}\r\n//           onResultSelect={(e, data) =>\r\n//             dispatch({ type: 'UPDATE_SELECTION', selection: data.result.title })\r\n//           }\r\n//           onSearchChange={handleSearchChange}\r\n//           results={results}\r\n//           value={value}\r\n//         />\r\n     \r\n//   )\r\n// }\r\n\r\n// export default SearchComponent\r\n\r\n// /*\r\n\r\n\r\n\r\n\r\n\r\n// */"]},"metadata":{},"sourceType":"module"}