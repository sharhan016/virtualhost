{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\Work\\\\virtualhost\\\\src\\\\App.js\";\nimport React from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport SignIn from './pages/auth/SignIn';\nimport SignUp from './pages/auth/SignUp';\nimport Dashboard from './pages/dashboard/Dashboard';\nimport StallDisplay from './pages/stalldisplay/StallDisplay';\nimport StoreList from './components/storelist/StoreList';\nimport { connect } from \"react-redux\"; // import Loading from \"./components/Loaders/GlobalLoading\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLogged: false\n    };\n  }\n\n  SecuredRoute(props) {\n    console.log('this is props', props);\n    return /*#__PURE__*/React.createElement(Route, {\n      path: props.path,\n      render: data => props.auth.isAuthenticated == false ? /*#__PURE__*/React.createElement(props.component, Object.assign({}, data, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 10\n        }\n      })) : /*#__PURE__*/React.createElement(Redirect, {\n        to: {\n          pathname: '/'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 10\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(BrowserRouter, {\n      basename: \"/event_portal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      component: SignIn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(SecuredRoute, {\n      path: \"/dashboard\",\n      exact: true,\n      component: Dashboard,\n      auth: this.props.auth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/login\",\n      component: SignIn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/register\",\n      component: SignUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/stalldisplay\",\n      component: StallDisplay,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/storelist\",\n      component: StoreList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}\n\nconst mapDispactchToProps = dispatch => ({// loadUser: () => dispatch(GetUser()),\n});\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, mapDispactchToProps)(App);\n/*\n\nbackground: url(/img/loginbg.jpg) no-repeat;\n\n*/","map":{"version":3,"sources":["C:/Users/USER/Desktop/Work/virtualhost/src/App.js"],"names":["React","BrowserRouter","Switch","Route","Redirect","SignIn","SignUp","Dashboard","StallDisplay","StoreList","connect","App","Component","constructor","props","state","isLogged","SecuredRoute","console","log","path","data","auth","isAuthenticated","pathname","render","mapDispactchToProps","dispatch","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom'\nimport SignIn from './pages/auth/SignIn'\nimport SignUp from './pages/auth/SignUp'\nimport Dashboard from './pages/dashboard/Dashboard';\nimport StallDisplay from './pages/stalldisplay/StallDisplay'\nimport StoreList from './components/storelist/StoreList'\nimport { connect } from \"react-redux\";\n// import Loading from \"./components/Loaders/GlobalLoading\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n       isLogged: false\n    };\n  };\n  SecuredRoute (props) {\n    console.log('this is props',props);\n    return(\n      <Route path={props.path} render={ data =>  props.auth.isAuthenticated == false ?\n        (<props.component {...data}></props.component>):\n        (<Redirect to={{pathname: '/'}}></Redirect> )}></Route>\n    )\n  }\n  \n  render() {\n    \n    return(\n      <BrowserRouter basename=\"/event_portal\">\n      <div className=\"App\">\n       {/* <Navbar /> */}\n        <Switch>\n        <Route path='/' exact component={SignIn}></Route>\n          <SecuredRoute path='/dashboard' exact component={Dashboard} auth={this.props.auth}></SecuredRoute>\n          <Route path='/login' component={SignIn}></Route>\n          <Route path='/register' component={SignUp}></Route>\n          <Route path='/stalldisplay' component={StallDisplay}></Route>\n          <Route path='/storelist' component={StoreList}></Route>\n        </Switch>\n      </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nconst mapDispactchToProps = (dispatch) => ({\n // loadUser: () => dispatch(GetUser()),\n});\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, mapDispactchToProps)(App);\n/*\n\nbackground: url(/img/loginbg.jpg) no-repeat;\n\n*/"]},"metadata":{},"sourceType":"module"}