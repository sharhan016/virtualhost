{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\Work\\\\virtualhost\\\\src\\\\components\\\\stalldisplay\\\\CustomList.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { FixedSizeList } from 'react-window';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport PictureAsPdfRoundedIcon from '@material-ui/icons/PictureAsPdfRounded';\nimport { Divider } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    //height: '',\n    maxWidth: 300,\n    // position: 'absolute',\n    // left: '20%',\n    // top: '20%',\n    marginLeft: 4,\n    backgroundColor: 'gray' //backgroundColor: theme.palette.background.paper,\n\n  }\n})); // const styles = {\n//     display: flex, primary={`Item ${index + 1}`}\n//     flexDirection: ''\n// }\n\nfunction renderRow(props) {\n  const {\n    index,\n    style\n  } = props;\n  return /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    style: style,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: 70,\n      width: 90,\n      backgroundColor: 'gray',\n      position: 'absolute',\n      left: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PictureAsPdfRoundedIcon, {\n    style: {\n      fontSize: 35,\n      position: 'absolute',\n      left: 25,\n      top: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      position: 'absolute',\n      left: 100,\n      width: 90\n    },\n    className: \"waves-effect waves-light btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"view\"), /*#__PURE__*/React.createElement(ListItemText, {\n    style: {\n      position: 'absolute',\n      left: 200\n    },\n    primary: `Item ${index + 1}`,\n    primaryTypographyProps: {\n      fontSize: 30\n    },\n    secondary: \"Owner, Country\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }));\n}\n\nrenderRow.propTypes = {\n  index: PropTypes.number.isRequired,\n  style: PropTypes.object.isRequired\n};\nexport default function VirtualizedList(props) {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FixedSizeList, {\n    height: 630,\n    width: 1290,\n    itemSize: 60,\n    itemCount: 15,\n    style: {\n      backgroundColor: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, renderRow));\n}","map":{"version":3,"sources":["C:/Users/USER/Desktop/Work/virtualhost/src/components/stalldisplay/CustomList.js"],"names":["React","PropTypes","makeStyles","ListItem","ListItemText","FixedSizeList","ChatIcon","PictureAsPdfRoundedIcon","Divider","useStyles","theme","root","width","maxWidth","marginLeft","backgroundColor","renderRow","props","index","style","height","position","left","fontSize","top","propTypes","number","isRequired","object","VirtualizedList","classes"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { FixedSizeList } from 'react-window';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport PictureAsPdfRoundedIcon from '@material-ui/icons/PictureAsPdfRounded';\r\nimport { Divider } from '@material-ui/core';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    //height: '',\r\n    maxWidth: 300,\r\n    // position: 'absolute',\r\n    // left: '20%',\r\n    // top: '20%',\r\n    marginLeft: 4,\r\n    backgroundColor: 'gray'\r\n    //backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n// const styles = {\r\n//     display: flex, primary={`Item ${index + 1}`}\r\n//     flexDirection: ''\r\n// }\r\nfunction renderRow(props) {\r\n  const { index, style } = props;\r\n\r\n  return (\r\n     <ListItem button style={style} key={index}>\r\n    \r\n      {/* <ListItemText primary={`Item ${index + 1}`}  secondary={\"Owner, Country\"} />\r\n      <ChatIcon /> */}\r\n      <div style={{height: 70, width: 90,backgroundColor: 'gray',position: 'absolute', left: 0}}>\r\n      <PictureAsPdfRoundedIcon style={{ fontSize: 35, position: 'absolute', left: 25, top: 20}} /> \r\n      <Divider />\r\n      \r\n      </div>\r\n      <button style={{position: 'absolute', left: 100, width: 90}} className=\"waves-effect waves-light btn\">view</button>\r\n      <ListItemText style={{position: 'absolute', left: 200}} primary={`Item ${index + 1}`} primaryTypographyProps={{fontSize: 30}} secondary={\"Owner, Country\"} />\r\n      <Divider />\r\n     </ListItem>\r\n    \r\n  );\r\n}\r\n\r\nrenderRow.propTypes = {\r\n  index: PropTypes.number.isRequired,\r\n  style: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default function VirtualizedList(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        {/* <h6 style={{backgroundColor: 'gray', textAlign: 'center', height: 40, paddingTop: 10,color: 'white'}}>Currently Present</h6> */}\r\n      <FixedSizeList height={630} width={1290} itemSize={60} itemCount={15} style={{backgroundColor: 'white'}}>\r\n        {renderRow}\r\n      </FixedSizeList>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}