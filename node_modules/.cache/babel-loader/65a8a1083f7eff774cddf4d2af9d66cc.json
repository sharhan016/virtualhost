{"ast":null,"code":"import { useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { canUseDOM, useIsomorphicLayoutEffect } from '@reach/utils';\n/**\r\n * Measure the current window dimensions.\r\n *\r\n * @see Docs   https://reacttraining.com/reach-ui/window-size\r\n * @see Source https://github.com/reach/reach-ui/tree/main/packages/window-size\r\n */\n\n/**\r\n * WindowSize\r\n *\r\n * @see Docs https://reacttraining.com/reach-ui/window-size#windowsize\r\n * @param props\r\n */\n\nvar WindowSize = function WindowSize(_ref) {\n  var children = _ref.children;\n  var dimensions = useWindowSize();\n  return children(dimensions);\n};\n\nif (process.env.NODE_ENV !== \"production\") {\n  WindowSize.displayName = \"WindowSize\";\n  WindowSize.propTypes = {\n    children: PropTypes.func.isRequired\n  };\n}\n/**\r\n * useWindowSize\r\n *\r\n * @see Docs https://reacttraining.com/reach-ui/window-size#usewindowsize\r\n */\n\n\nfunction useWindowSize() {\n  var _useRef = useRef(canUseDOM()),\n      hasWindow = _useRef.current;\n\n  var _useState = useState({\n    width: hasWindow ? window.innerWidth : 0,\n    height: hasWindow ? window.innerHeight : 0\n  }),\n      dimensions = _useState[0],\n      setDimensions = _useState[1];\n\n  useIsomorphicLayoutEffect(function () {\n    var resize = function resize() {\n      return setDimensions({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    };\n\n    window.addEventListener(\"resize\", resize);\n    return function () {\n      return window.removeEventListener(\"resize\", resize);\n    };\n  }, []);\n  return dimensions;\n}\n\nexport default WindowSize;\nexport { WindowSize, useWindowSize };","map":{"version":3,"sources":["../src/index.tsx"],"names":["WindowSize","children","dimensions","useWindowSize","PropTypes","isRequired","current","hasWindow","useRef","canUseDOM","setDimensions","useState","width","window","height","useIsomorphicLayoutEffect","resize","innerHeight"],"mappings":";;;AAAA;;;;;;;AAaA;;;;;;;IAMaA,UAAU,GAA8B,SAAxCA,UAAwC,CAAA,IAAA,EAAA;MAAGC,QAAAA,GAAAA,IAAAA,CAAAA,Q;AACtD,MAAMC,UAAU,GAAGC,aAAnB,EAAA;AACA,SAAOF,QAAQ,CAAf,UAAe,CAAf;AACD,C;;AAcD,IAAA,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,EAAa;AACXD,EAAAA,UAAU,CAAVA,WAAAA,GAAAA,YAAAA;AACAA,EAAAA,UAAU,CAAVA,SAAAA,GAAuB;AACrBC,IAAAA,QAAQ,EAAEG,SAAS,CAATA,IAAAA,CAAeC;AADJ,GAAvBL;AAGD;AAMD;;;;;;;SAKgBG,a,GAAAA;gBACeK,MAAM,CAACC,SAAD,EAAA,C;MAApBF,SAAAA,GAAAA,OAAAA,CAATD,O;;kBAC8BK,QAAQ,CAAC;AAC3CC,IAAAA,KAAK,EAAEL,SAAS,GAAGM,MAAM,CAAT,UAAA,GAD2B,CAAA;AAE3CC,IAAAA,MAAM,EAAEP,SAAS,GAAGM,MAAM,CAAT,WAAA,GAAwB;AAFE,GAAD,C;MAArCX,UAAAA,GAAAA,SAAAA,CAAAA,CAAAA,C;MAAYQ,aAAAA,GAAAA,SAAAA,CAAAA,CAAAA,C;;AAInBK,EAAAA,yBAAyB,CAAC,YAAA;AACxB,QAAMC,MAAM,GAAG,SAATA,MAAS,GAAA;AAAA,aACbN,aAAa,CAAC;AACZE,QAAAA,KAAK,EAAEC,MAAM,CADD,UAAA;AAEZC,QAAAA,MAAM,EAAED,MAAM,CAACI;AAFH,OAAD,CADA;AAAf,KAAA;;AAKAJ,IAAAA,MAAM,CAANA,gBAAAA,CAAAA,QAAAA,EAAAA,MAAAA;AACA,WAAO,YAAA;AAAA,aAAMA,MAAM,CAANA,mBAAAA,CAAAA,QAAAA,EAAN,MAAMA,CAAN;AAAP,KAAA;AAPuB,GAAA,EAAzBE,EAAyB,CAAzBA;AASA,SAAA,UAAA;AACD","sourcesContent":["/**\n * Measure the current window dimensions.\n *\n * @see Docs   https://reacttraining.com/reach-ui/window-size\n * @see Source https://github.com/reach/reach-ui/tree/main/packages/window-size\n */\n\nimport React, { useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { canUseDOM, useIsomorphicLayoutEffect } from \"@reach/utils\";\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * WindowSize\n *\n * @see Docs https://reacttraining.com/reach-ui/window-size#windowsize\n * @param props\n */\nexport const WindowSize: React.FC<WindowSizeProps> = ({ children }) => {\n  const dimensions = useWindowSize();\n  return children(dimensions);\n};\n\n/**\n * @see Docs https://reacttraining.com/reach-ui/window-size#windowsize-props\n */\nexport type WindowSizeProps = {\n  /**\n   * A function that calls back to you with the window size.\n   *\n   * @see Docs https://reacttraining.com/reach-ui/window-size#windowsize-children\n   */\n  children: (size: TWindowSize) => React.ReactElement<any>;\n};\n\nif (__DEV__) {\n  WindowSize.displayName = \"WindowSize\";\n  WindowSize.propTypes = {\n    children: PropTypes.func.isRequired,\n  };\n}\n\nexport default WindowSize;\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * useWindowSize\n *\n * @see Docs https://reacttraining.com/reach-ui/window-size#usewindowsize\n */\nexport function useWindowSize() {\n  let { current: hasWindow } = useRef(canUseDOM());\n  const [dimensions, setDimensions] = useState({\n    width: hasWindow ? window.innerWidth : 0,\n    height: hasWindow ? window.innerHeight : 0,\n  });\n  useIsomorphicLayoutEffect(() => {\n    const resize = () =>\n      setDimensions({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    window.addEventListener(\"resize\", resize);\n    return () => window.removeEventListener(\"resize\", resize);\n  }, []);\n  return dimensions;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Types\n\nexport type TWindowSize = {\n  width: number;\n  height: number;\n};\n"]},"metadata":{},"sourceType":"module"}