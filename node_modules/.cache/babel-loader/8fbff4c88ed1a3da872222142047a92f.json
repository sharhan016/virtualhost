{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\Work\\\\virtualhost\\\\src\\\\App.js\";\nimport React from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport Dashboard from './components/dashboard/Dashboard';\nimport StallDisplay from './components/stalldisplay/StallDisplay';\nimport StoreList from './components/storelist/StoreList';\nimport { connect } from \"react-redux\"; // import Loading from \"./components/Loaders/GlobalLoading\";\n\nclass App extends React.Component {\n  render() {\n    console.log(this.props); // let app = <Loading />\n    // if(\n    //   this.props.auth.isAuthenticated &&\n    //   // this.props.auth.isLoading \n    //    this.props.auth.appLoaded\n    // ){\n    //   console.log('inside app render');\n    //   app = (\n    //     <BrowserRouter basename=\"/event_portal\">\n    //   <div className=\"App\">\n    //    {/* <Navbar /> */}\n    //     <Switch>\n    //     <Route path='/' exact component={SignIn}></Route>\n    //       <Route path='/dashboard' exact component={Dashboard}></Route>\n    //       <Route path='/login' component={SignIn}></Route>\n    //       <Route path='/register' component={SignUp}></Route>\n    //       <Route path='/stalldisplay' component={StallDisplay}></Route>\n    //       <Route path='/storelist' component={StoreList}></Route>\n    //     </Switch>\n    //   </div>\n    //   </BrowserRouter>\n    //   );\n    // }\n    // else{\n    //   return <Redirect to='/dashboard' />\n    // }\n    //return <div className=\"App\">{app}</div>;\n\n    return /*#__PURE__*/React.createElement(BrowserRouter, {\n      basename: \"/event_portal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      component: SignIn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/dashboard\",\n      exact: true,\n      component: Dashboard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/login\",\n      component: SignIn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/register\",\n      component: SignUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/stalldisplay\",\n      component: StallDisplay,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/storelist\",\n      component: StoreList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}\n\nconst mapDispactchToProps = dispatch => ({// loadUser: () => dispatch(GetUser()),\n});\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, mapDispactchToProps)(App);\n/*\n\nbackground: url(/img/loginbg.jpg) no-repeat;\n\n*/","map":{"version":3,"sources":["C:/Users/USER/Desktop/Work/virtualhost/src/App.js"],"names":["React","BrowserRouter","Switch","Route","Redirect","SignIn","SignUp","Dashboard","StallDisplay","StoreList","connect","App","Component","render","console","log","props","mapDispactchToProps","dispatch","mapStateToProps","state","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,EAAuCC,QAAvC,QAAuD,kBAAvD;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,OAAOC,YAAP,MAAyB,wCAAzB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AAEA,MAAMC,GAAN,SAAkBX,KAAK,CAACY,SAAxB,CAAkC;AAChCC,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB,EADO,CAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AACA,wBACE,oBAAC,aAAD;AAAe,MAAA,QAAQ,EAAC,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,KAAK,MAArB;AAAsB,MAAA,SAAS,EAAEX,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,YAAZ;AAAyB,MAAA,KAAK,MAA9B;AAA+B,MAAA,SAAS,EAAEE,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAEF,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,eAIE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,WAAZ;AAAwB,MAAA,SAAS,EAAEC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,eAKE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,eAAZ;AAA4B,MAAA,SAAS,EAAEE,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,eAME,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,YAAZ;AAAyB,MAAA,SAAS,EAAEC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CAFF,CADA,CADF;AAeD;;AA9C+B;;AAiDlC,MAAMQ,mBAAmB,GAAIC,QAAD,KAAe,CAC1C;AAD0C,CAAf,CAA5B;;AAIA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCC,EAAAA,IAAI,EAAED,KAAK,CAACC;AADsB,CAAZ,CAAxB;;AAIA,eAAeX,OAAO,CAACS,eAAD,EAAkBF,mBAAlB,CAAP,CAA8CN,GAA9C,CAAf;AACA","sourcesContent":["import React from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport Dashboard from './components/dashboard/Dashboard';\nimport StallDisplay from './components/stalldisplay/StallDisplay'\nimport StoreList from './components/storelist/StoreList'\nimport { connect } from \"react-redux\";\n// import Loading from \"./components/Loaders/GlobalLoading\";\n\nclass App extends React.Component {\n  render() {\n    console.log(this.props);\n    // let app = <Loading />\n    // if(\n    //   this.props.auth.isAuthenticated &&\n    //   // this.props.auth.isLoading \n    //    this.props.auth.appLoaded\n    // ){\n    //   console.log('inside app render');\n    //   app = (\n    //     <BrowserRouter basename=\"/event_portal\">\n    //   <div className=\"App\">\n    //    {/* <Navbar /> */}\n    //     <Switch>\n    //     <Route path='/' exact component={SignIn}></Route>\n    //       <Route path='/dashboard' exact component={Dashboard}></Route>\n    //       <Route path='/login' component={SignIn}></Route>\n    //       <Route path='/register' component={SignUp}></Route>\n    //       <Route path='/stalldisplay' component={StallDisplay}></Route>\n    //       <Route path='/storelist' component={StoreList}></Route>\n    //     </Switch>\n    //   </div>\n    //   </BrowserRouter>\n    //   );\n\n    // }\n    // else{\n    //   return <Redirect to='/dashboard' />\n    // }\n    //return <div className=\"App\">{app}</div>;\n    return(\n      <BrowserRouter basename=\"/event_portal\">\n      <div className=\"App\">\n       {/* <Navbar /> */}\n        <Switch>\n        <Route path='/' exact component={SignIn}></Route>\n          <Route path='/dashboard' exact component={Dashboard}></Route>\n          <Route path='/login' component={SignIn}></Route>\n          <Route path='/register' component={SignUp}></Route>\n          <Route path='/stalldisplay' component={StallDisplay}></Route>\n          <Route path='/storelist' component={StoreList}></Route>\n        </Switch>\n      </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nconst mapDispactchToProps = (dispatch) => ({\n // loadUser: () => dispatch(GetUser()),\n});\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, mapDispactchToProps)(App);\n/*\n\nbackground: url(/img/loginbg.jpg) no-repeat;\n\n*/"]},"metadata":{},"sourceType":"module"}