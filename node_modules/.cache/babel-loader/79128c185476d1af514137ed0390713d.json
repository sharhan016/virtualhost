{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\Work\\\\virtualhost\\\\src\\\\App.js\";\nimport React from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport Dashboard from './components/dashboard/Dashboard';\nimport StallDisplay from './components/stalldisplay/StallDisplay';\nimport StoreList from './components/storelist/StoreList';\nimport { connect } from \"react-redux\"; // import Loading from \"./components/Loaders/GlobalLoading\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLogged: this.props.auth.isAuthenticated\n    };\n  }\n\n  render() {\n    console.log(this.props);\n\n    function SecuredRoute(props) {\n      console.log('inside function', this.state);\n      return /*#__PURE__*/React.createElement(Route, {\n        path: props.path,\n        render: data => this.state.isLogged ? /*#__PURE__*/React.createElement(props.component, Object.assign({}, data, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 11\n          }\n        })) : /*#__PURE__*/React.createElement(Redirect, {\n          to: {\n            pathname: '/'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 12\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(BrowserRouter, {\n      basename: \"/event_portal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      component: SignIn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(SecuredRoute, {\n      path: \"/dashboard\",\n      exact: true,\n      component: Dashboard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/login\",\n      component: SignIn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/register\",\n      component: SignUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/stalldisplay\",\n      component: StallDisplay,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/storelist\",\n      component: StoreList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}\n\nconst mapDispactchToProps = dispatch => ({// loadUser: () => dispatch(GetUser()),\n});\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, mapDispactchToProps)(App);\n/*\n\nbackground: url(/img/loginbg.jpg) no-repeat;\n\n*/","map":{"version":3,"sources":["C:/Users/USER/Desktop/Work/virtualhost/src/App.js"],"names":["React","BrowserRouter","Switch","Route","Redirect","SignIn","SignUp","Dashboard","StallDisplay","StoreList","connect","App","Component","constructor","props","state","isLogged","auth","isAuthenticated","render","console","log","SecuredRoute","path","data","pathname","mapDispactchToProps","dispatch","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,EAAuCC,QAAvC,QAAuD,kBAAvD;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,OAAOC,YAAP,MAAyB,wCAAzB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AAEA,MAAMC,GAAN,SAAkBX,KAAK,CAACY,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACVC,MAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWG,IAAX,CAAgBC;AADhB,KAAb;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAjB;;AACA,aAASQ,YAAT,CAAsBR,KAAtB,EAA6B;AAC3BM,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8B,KAAKN,KAAnC;AACA,0BACE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAED,KAAK,CAACS,IAAnB;AAAyB,QAAA,MAAM,EAAGC,IAAI,IAAI,KAAKT,KAAL,CAAWC,QAAX,gBACxC,oBAAC,KAAD,CAAO,SAAP,oBAAqBQ,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADwC,gBAEvC,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAE;AAACC,YAAAA,QAAQ,EAAE;AAAX,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAKD;;AACD,wBACE,oBAAC,aAAD;AAAe,MAAA,QAAQ,EAAC,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,KAAK,MAArB;AAAsB,MAAA,SAAS,EAAEpB,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAEE,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,YAAnB;AAAgC,MAAA,KAAK,MAArC;AAAsC,MAAA,SAAS,EAAEE,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAEF,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,eAIE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,WAAZ;AAAwB,MAAA,SAAS,EAAEC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,eAKE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,eAAZ;AAA4B,MAAA,SAAS,EAAEE,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,eAME,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,YAAZ;AAAyB,MAAA,SAAS,EAAEC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CAFF,CADA,CADF;AAeD;;AAlC+B;;AAqClC,MAAMiB,mBAAmB,GAAIC,QAAD,KAAe,CAC1C;AAD0C,CAAf,CAA5B;;AAIA,MAAMC,eAAe,GAAIb,KAAD,KAAY;AAClCE,EAAAA,IAAI,EAAEF,KAAK,CAACE;AADsB,CAAZ,CAAxB;;AAIA,eAAeP,OAAO,CAACkB,eAAD,EAAkBF,mBAAlB,CAAP,CAA8Cf,GAA9C,CAAf;AACA","sourcesContent":["import React from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport Dashboard from './components/dashboard/Dashboard';\nimport StallDisplay from './components/stalldisplay/StallDisplay'\nimport StoreList from './components/storelist/StoreList'\nimport { connect } from \"react-redux\";\n// import Loading from \"./components/Loaders/GlobalLoading\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n       isLogged: this.props.auth.isAuthenticated\n    };\n  };\n  \n  render() {\n    console.log(this.props);\n    function SecuredRoute(props) {\n      console.log('inside function',this.state);\n      return(\n        <Route path={props.path} render={ data => this.state.isLogged? (\n          <props.component {...data}></props.component>):\n          (<Redirect to={{pathname: '/'}}></Redirect> )}></Route>\n      )\n    }\n    return(\n      <BrowserRouter basename=\"/event_portal\">\n      <div className=\"App\">\n       {/* <Navbar /> */}\n        <Switch>\n        <Route path='/' exact component={SignIn}></Route>\n          <SecuredRoute path='/dashboard' exact component={Dashboard}></SecuredRoute>\n          <Route path='/login' component={SignIn}></Route>\n          <Route path='/register' component={SignUp}></Route>\n          <Route path='/stalldisplay' component={StallDisplay}></Route>\n          <Route path='/storelist' component={StoreList}></Route>\n        </Switch>\n      </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nconst mapDispactchToProps = (dispatch) => ({\n // loadUser: () => dispatch(GetUser()),\n});\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, mapDispactchToProps)(App);\n/*\n\nbackground: url(/img/loginbg.jpg) no-repeat;\n\n*/"]},"metadata":{},"sourceType":"module"}