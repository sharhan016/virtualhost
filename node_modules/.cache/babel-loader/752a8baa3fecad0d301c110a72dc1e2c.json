{"ast":null,"code":"import axios from \"axios\";\nimport * as actionTypes from \"./ActionTypes\";\nexport const FirstTimeAppLoaded = () => ({\n  type: actionTypes.FIRST_TIME_APP_LOADED\n});\nexport const LoginStart = () => {\n  return {\n    type: actionTypes.LOGIN_START\n  };\n};\nexport const LoginSuccess = (user, profile, token) => {\n  localStorage.setItem(\"token\", token);\n  axios.defaults.headers[\"Authorization\"] = `Token ${token}`;\n  return {\n    type: actionTypes.LOGIN_SUCCESS,\n    user: user,\n    profile: profile,\n    token: token\n  };\n};\nexport const LoginFailed = error => ({\n  type: actionTypes.LOGIN_FAILED,\n  error: error\n});\nconst headers = {\n  'Content-Type': 'application/json',\n  'Access-Control-Allow-Origin': '*'\n};\nexport const Login = data => {\n  return dispatch => {\n    dispatch(LoginStart());\n    console.log('Reached Login');\n    axios.post(\"/login\", data, {\n      headers: headers\n    }).then(res => {\n      dispatch(LoginSuccess(res.data.userDetails.user_id, res.data.userDetails.firstname, res.data.token));\n      console.log('axios data', res);\n    }).catch(err => {\n      dispatch(LoginFailed(err.response));\n      console.log(err);\n    });\n  };\n}; //LOGOUT\n\nexport const LogoutStart = () => {\n  return {\n    type: actionTypes.LOGOUT_START\n  };\n};\nexport const LogoutSuccess = () => {\n  delete axios.defaults.headers[\"Authorization\"]; // console.log(axios.defaults.headers);\n\n  localStorage.removeItem(\"token\");\n  return {\n    type: actionTypes.LOGOUT_SUCCESS\n  };\n};\nexport const LogoutFailed = error => ({\n  type: actionTypes.LOGOUT_FAILED,\n  error: error\n}); // Need to create the api for it\n\nexport const Logout = data => {\n  return (dispatch, getState) => {\n    dispatch(LogoutStart());\n    axios.post(\"/logout/\", data).then(res => {\n      dispatch(LogoutSuccess());\n    }).catch(err => {\n      dispatch(LogoutFailed(err.response.data));\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/USER/Desktop/Work/virtualhost/src/store/actions/Auth.js"],"names":["axios","actionTypes","FirstTimeAppLoaded","type","FIRST_TIME_APP_LOADED","LoginStart","LOGIN_START","LoginSuccess","user","profile","token","localStorage","setItem","defaults","headers","LOGIN_SUCCESS","LoginFailed","error","LOGIN_FAILED","Login","data","dispatch","console","log","post","then","res","userDetails","user_id","firstname","catch","err","response","LogoutStart","LOGOUT_START","LogoutSuccess","removeItem","LOGOUT_SUCCESS","LogoutFailed","LOGOUT_FAILED","Logout","getState"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport * as actionTypes from \"./ActionTypes\";\r\n\r\nexport const FirstTimeAppLoaded = () => ({\r\n    type: actionTypes.FIRST_TIME_APP_LOADED,\r\n  });\r\n  \r\n  export const LoginStart = () => {\r\n    return { type: actionTypes.LOGIN_START };\r\n  };\r\n\r\n  export const LoginSuccess = (user, profile, token) => {\r\n    localStorage.setItem(\"token\", token);\r\n    axios.defaults.headers[\"Authorization\"] = `Token ${token}`;\r\n  \r\n    return {\r\n      type: actionTypes.LOGIN_SUCCESS,\r\n      user: user,\r\n      profile: profile,\r\n      token: token,\r\n    };\r\n  };\r\n\r\n  export const LoginFailed = (error) => ({\r\n    type: actionTypes.LOGIN_FAILED,\r\n    error: error,\r\n  });\r\n  \r\n  const headers = {\r\n    'Content-Type': 'application/json',\r\n    'Access-Control-Allow-Origin': '*'\r\n  }\r\n  export const Login = (data) => {\r\n    return (dispatch) => {\r\n      dispatch(LoginStart());\r\n      console.log('Reached Login');\r\n      axios\r\n        .post(\"/login\", data, {\r\n          headers: headers\r\n        })\r\n        .then((res) => {\r\n          dispatch(LoginSuccess(res.data.userDetails.user_id, res.data.userDetails.firstname, res.data.token));\r\n          console.log('axios data',res);\r\n        })\r\n        .catch((err) => {\r\n          dispatch(LoginFailed(err.response));\r\n          console.log(err);\r\n        });\r\n    };\r\n  };\r\n  \r\n  //LOGOUT\r\n  \r\n  export const LogoutStart = () => {\r\n    return { type: actionTypes.LOGOUT_START };\r\n  };\r\n  \r\n  export const LogoutSuccess = () => {\r\n    delete axios.defaults.headers[\"Authorization\"];\r\n    // console.log(axios.defaults.headers);\r\n    localStorage.removeItem(\"token\");\r\n    return {\r\n      type: actionTypes.LOGOUT_SUCCESS,\r\n    };\r\n  };\r\n  \r\n  export const LogoutFailed = (error) => ({\r\n    type: actionTypes.LOGOUT_FAILED,\r\n    error: error,\r\n  });\r\n\r\n  // Need to create the api for it\r\n  \r\n  export const Logout = (data) => {\r\n    return (dispatch, getState) => {\r\n      dispatch(LogoutStart());\r\n      axios\r\n        .post(\"/logout/\", data)\r\n        .then((res) => {\r\n          dispatch(LogoutSuccess());\r\n        })\r\n        .catch((err) => {\r\n          dispatch(LogoutFailed(err.response.data));\r\n        });\r\n    };\r\n  };\r\n  "]},"metadata":{},"sourceType":"module"}