{"version":3,"file":"window-size.cjs.production.min.js","sources":["../src/index.tsx"],"sourcesContent":["/**\n * Measure the current window dimensions.\n *\n * @see Docs   https://reacttraining.com/reach-ui/window-size\n * @see Source https://github.com/reach/reach-ui/tree/main/packages/window-size\n */\n\nimport React, { useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { canUseDOM, useIsomorphicLayoutEffect } from \"@reach/utils\";\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * WindowSize\n *\n * @see Docs https://reacttraining.com/reach-ui/window-size#windowsize\n * @param props\n */\nexport const WindowSize: React.FC<WindowSizeProps> = ({ children }) => {\n  const dimensions = useWindowSize();\n  return children(dimensions);\n};\n\n/**\n * @see Docs https://reacttraining.com/reach-ui/window-size#windowsize-props\n */\nexport type WindowSizeProps = {\n  /**\n   * A function that calls back to you with the window size.\n   *\n   * @see Docs https://reacttraining.com/reach-ui/window-size#windowsize-children\n   */\n  children: (size: TWindowSize) => React.ReactElement<any>;\n};\n\nif (__DEV__) {\n  WindowSize.displayName = \"WindowSize\";\n  WindowSize.propTypes = {\n    children: PropTypes.func.isRequired,\n  };\n}\n\nexport default WindowSize;\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * useWindowSize\n *\n * @see Docs https://reacttraining.com/reach-ui/window-size#usewindowsize\n */\nexport function useWindowSize() {\n  let { current: hasWindow } = useRef(canUseDOM());\n  const [dimensions, setDimensions] = useState({\n    width: hasWindow ? window.innerWidth : 0,\n    height: hasWindow ? window.innerHeight : 0,\n  });\n  useIsomorphicLayoutEffect(() => {\n    const resize = () =>\n      setDimensions({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    window.addEventListener(\"resize\", resize);\n    return () => window.removeEventListener(\"resize\", resize);\n  }, []);\n  return dimensions;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Types\n\nexport type TWindowSize = {\n  width: number;\n  height: number;\n};\n"],"names":["WindowSize","children","useWindowSize","hasWindow","useRef","canUseDOM","current","useState","width","window","innerWidth","height","innerHeight","dimensions","setDimensions","useIsomorphicLayoutEffect","resize","addEventListener","removeEventListener"],"mappings":"+IAmBaA,EAAwC,mBAE5CC,IAF+CA,UACnCC,eAgCLA,QACCC,EAAcC,SAAOC,eAA9BC,UAC8BC,WAAS,CAC3CC,MAAOL,EAAYM,OAAOC,WAAa,EACvCC,OAAQR,EAAYM,OAAOG,YAAc,IAFpCC,OAAYC,cAInBC,6BAA0B,eAClBC,EAAS,kBACbF,EAAc,CACZN,MAAOC,OAAOC,WACdC,OAAQF,OAAOG,sBAEnBH,OAAOQ,iBAAiB,SAAUD,GAC3B,kBAAMP,OAAOS,oBAAoB,SAAUF,MACjD,IACIH"}