'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var react = require('react');
var PropTypes = _interopDefault(require('prop-types'));
var utils = require('@reach/utils');

/**
 * Measure the current window dimensions.
 *
 * @see Docs   https://reacttraining.com/reach-ui/window-size
 * @see Source https://github.com/reach/reach-ui/tree/main/packages/window-size
 */

/**
 * WindowSize
 *
 * @see Docs https://reacttraining.com/reach-ui/window-size#windowsize
 * @param props
 */

var WindowSize = function WindowSize(_ref) {
  var children = _ref.children;
  var dimensions = useWindowSize();
  return children(dimensions);
};

{
  WindowSize.displayName = "WindowSize";
  WindowSize.propTypes = {
    children: PropTypes.func.isRequired
  };
}

/**
 * useWindowSize
 *
 * @see Docs https://reacttraining.com/reach-ui/window-size#usewindowsize
 */

function useWindowSize() {
  var _useRef = react.useRef(utils.canUseDOM()),
      hasWindow = _useRef.current;

  var _useState = react.useState({
    width: hasWindow ? window.innerWidth : 0,
    height: hasWindow ? window.innerHeight : 0
  }),
      dimensions = _useState[0],
      setDimensions = _useState[1];

  utils.useIsomorphicLayoutEffect(function () {
    var resize = function resize() {
      return setDimensions({
        width: window.innerWidth,
        height: window.innerHeight
      });
    };

    window.addEventListener("resize", resize);
    return function () {
      return window.removeEventListener("resize", resize);
    };
  }, []);
  return dimensions;
}

exports.WindowSize = WindowSize;
exports.default = WindowSize;
exports.useWindowSize = useWindowSize;
//# sourceMappingURL=window-size.cjs.development.js.map
