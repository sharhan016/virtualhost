{"version":3,"file":"window-size.cjs.development.js","sources":["../src/index.tsx"],"sourcesContent":["/**\n * Measure the current window dimensions.\n *\n * @see Docs   https://reacttraining.com/reach-ui/window-size\n * @see Source https://github.com/reach/reach-ui/tree/main/packages/window-size\n */\n\nimport React, { useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { canUseDOM, useIsomorphicLayoutEffect } from \"@reach/utils\";\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * WindowSize\n *\n * @see Docs https://reacttraining.com/reach-ui/window-size#windowsize\n * @param props\n */\nexport const WindowSize: React.FC<WindowSizeProps> = ({ children }) => {\n  const dimensions = useWindowSize();\n  return children(dimensions);\n};\n\n/**\n * @see Docs https://reacttraining.com/reach-ui/window-size#windowsize-props\n */\nexport type WindowSizeProps = {\n  /**\n   * A function that calls back to you with the window size.\n   *\n   * @see Docs https://reacttraining.com/reach-ui/window-size#windowsize-children\n   */\n  children: (size: TWindowSize) => React.ReactElement<any>;\n};\n\nif (__DEV__) {\n  WindowSize.displayName = \"WindowSize\";\n  WindowSize.propTypes = {\n    children: PropTypes.func.isRequired,\n  };\n}\n\nexport default WindowSize;\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * useWindowSize\n *\n * @see Docs https://reacttraining.com/reach-ui/window-size#usewindowsize\n */\nexport function useWindowSize() {\n  let { current: hasWindow } = useRef(canUseDOM());\n  const [dimensions, setDimensions] = useState({\n    width: hasWindow ? window.innerWidth : 0,\n    height: hasWindow ? window.innerHeight : 0,\n  });\n  useIsomorphicLayoutEffect(() => {\n    const resize = () =>\n      setDimensions({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    window.addEventListener(\"resize\", resize);\n    return () => window.removeEventListener(\"resize\", resize);\n  }, []);\n  return dimensions;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Types\n\nexport type TWindowSize = {\n  width: number;\n  height: number;\n};\n"],"names":["WindowSize","children","dimensions","useWindowSize","displayName","propTypes","PropTypes","func","isRequired","useRef","canUseDOM","hasWindow","current","useState","width","window","innerWidth","height","innerHeight","setDimensions","useIsomorphicLayoutEffect","resize","addEventListener","removeEventListener"],"mappings":";;;;;;;;;;AAAA;;;;;;;AAaA;;;;;;;IAMaA,UAAU,GAA8B,SAAxCA,UAAwC;MAAGC,gBAAAA;AACtD,MAAMC,UAAU,GAAGC,aAAa,EAAhC;AACA,SAAOF,QAAQ,CAACC,UAAD,CAAf;AACD;;AAcY;AACXF,EAAAA,UAAU,CAACI,WAAX,GAAyB,YAAzB;AACAJ,EAAAA,UAAU,CAACK,SAAX,GAAuB;AACrBJ,IAAAA,QAAQ,EAAEK,SAAS,CAACC,IAAV,CAAeC;AADJ,GAAvB;AAGD;;AAMD;;;;;;SAKgBL;gBACeM,YAAM,CAACC,eAAS,EAAV;MAApBC,oBAATC;;kBAC8BC,cAAQ,CAAC;AAC3CC,IAAAA,KAAK,EAAEH,SAAS,GAAGI,MAAM,CAACC,UAAV,GAAuB,CADI;AAE3CC,IAAAA,MAAM,EAAEN,SAAS,GAAGI,MAAM,CAACG,WAAV,GAAwB;AAFE,GAAD;MAArChB;MAAYiB;;AAInBC,EAAAA,+BAAyB,CAAC;AACxB,QAAMC,MAAM,GAAG,SAATA,MAAS;AAAA,aACbF,aAAa,CAAC;AACZL,QAAAA,KAAK,EAAEC,MAAM,CAACC,UADF;AAEZC,QAAAA,MAAM,EAAEF,MAAM,CAACG;AAFH,OAAD,CADA;AAAA,KAAf;;AAKAH,IAAAA,MAAM,CAACO,gBAAP,CAAwB,QAAxB,EAAkCD,MAAlC;AACA,WAAO;AAAA,aAAMN,MAAM,CAACQ,mBAAP,CAA2B,QAA3B,EAAqCF,MAArC,CAAN;AAAA,KAAP;AACD,GARwB,EAQtB,EARsB,CAAzB;AASA,SAAOnB,UAAP;AACD;;;;;;"}